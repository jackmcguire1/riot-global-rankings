AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Globals:
  Function:
    Environment:
      Variables:
        MONGO_HOST: !Ref MongoHost
        MONGO_DATABASE: !Ref MongoDatabase
        MONGO_TEAMS_COLLECTION: !Ref MongoTeamsCollection
        MONGO_GAMES_COLLECTION: !Ref MongoGamesCollection
        MONGO_MAPPINGS_COLLECTION: !Ref MongoMappingsCollection
        MONGO_TOURNAMENTS_COLLECTION: !Ref MongoTournamentsCollection
        MONGO_LEAGUES_COLLECTION: !Ref MongoLeaguesCollection
        MONGO_PLAYERS_COLLECTION: !Ref MongoPlayersCollection
    Timeout: 300

Parameters:
  MongoHost:
    Type: String

  MongoDatabase:
    Type: String
    Default: "riot"

  MongoTeamsCollection:
    Type: String
    Default: "teams"

  MongoMappingsCollection:
    Type: String
    Default: "mappings"

  MongoLeaguesCollection:
    Type: String
    Default: "leagues"

  MongoPlayersCollection:
    Type: String
    Default: "players"

  MongoTournamentsCollection:
    Type: String
    Default: "tournaments"

  MongoGamesCollection:
    Type: String
    Default: "tournaments"

  Runtime:
    Type: String
    Default: "provided.al2023"

  Architecture:
    Type: String
    Default: "arm64"

  Handler:
    Type: String
    Default: bootstrap

Resources:
  Api:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./cmd/api/
      Runtime: !Ref Runtime
      Handler: !Ref Handler
      Environment:
        Variables:
          MONGO_HOST: !Ref MongoHost
          LAMBDA_INSIGHTS_LOG_LEVEL: info
          AWS_LWA_READINESS_CHECK_PATH: "/status"
          LISTEN_HOST: "localhost"
          LISTEN_PORT: "8080"
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:753240598075:layer:LambdaAdapterLayerArm64:20
      Architectures:
        - !Ref Architecture
      Events:
        ApiEvent:
          Type: HttpApi
      Policies:
      Tags:
        FuncNameTag: !Sub ${AWS::StackName}-API
      FunctionName: !Sub ${AWS::StackName}-API
    Metadata:
      BuildMethod: go1.x